"""
Пакет, содержащий классы для работы с AST (Abstract Syntax Tree) для языка 1С.

Этот пакет предоставляет интерфейсы и базовые классы для узлов AST,
которые позволяют:
1. Восстанавливать логику (в том числе бизнес-логику)
2. Строить UML-диаграммы
3. Анализировать функциональность
4. Преобразовывать код в другие языки
"""

from ast_create.ast.base_nodes import (
    BaseAnnotation,
    BaseAssignment,
    BaseBinaryExpression,
    BaseCallExpression,
    BaseComment,
    BaseExecuteStatement,
    BaseExpression,
    BaseForEachStatement,
    BaseForStatement,
    BaseFunctionDeclaration,
    BaseIdentifier,
    BaseIfStatement,
    BaseIndexAccessExpression,
    BaseLiteral,
    BaseModule,
    BaseNewExpression,
    BaseNode,
    BaseParameter,
    BasePreprocessorDirective,
    BasePreprocessorIf,
    BasePreprocessorRegion,
    BaseProcedureDeclaration,
    BasePropertyAccessExpression,
    BaseQuery,
    BaseRaiseStatement,
    BaseReferenceInfo,
    BaseReturnStatement,
    BaseStatement,
    BaseTryStatement,
    BaseUnaryExpression,
    BaseVariableDeclaration,
    BaseWhileStatement,
)
from ast_create.ast.nodes import (
    ExecutionContext,
    IAnnotation,
    IAssignment,
    IBinaryExpression,
    ICallExpression,
    IComment,
    IExecuteStatement,
    IExpression,
    IForEachStatement,
    IForStatement,
    IFunctionDeclaration,
    IIdentifier,
    IIfStatement,
    IIndexAccessExpression,
    ILiteral,
    IModule,
    INewExpression,
    INode,
    IParameter,
    IPreprocessorDirective,
    IPreprocessorIf,
    IPreprocessorRegion,
    IProcedureDeclaration,
    IPropertyAccessExpression,
    IQuery,
    IRaiseStatement,
    IReferenceInfo,
    IReturnStatement,
    IStatement,
    ITryStatement,
    IUnaryExpression,
    IVariableDeclaration,
    IWhileStatement,
    ModuleType,
    NodeType,
    SourceLocation,
)

__all__ = [
    # Enums
    "NodeType",
    "ModuleType",
    "ExecutionContext",
    # Data classes
    "SourceLocation",
    # Interfaces
    "INode",
    "IAnnotation",
    "IModule",
    "IVariableDeclaration",
    "IParameter",
    "IProcedureDeclaration",
    "IFunctionDeclaration",
    "IStatement",
    "IExpression",
    "IAssignment",
    "IIfStatement",
    "IForStatement",
    "IForEachStatement",
    "IWhileStatement",
    "ITryStatement",
    "IReturnStatement",
    "IRaiseStatement",
    "IExecuteStatement",
    "IBinaryExpression",
    "IUnaryExpression",
    "ICallExpression",
    "IPropertyAccessExpression",
    "IIndexAccessExpression",
    "INewExpression",
    "ILiteral",
    "IIdentifier",
    "IPreprocessorDirective",
    "IPreprocessorIf",
    "IPreprocessorRegion",
    "IQuery",
    "IComment",
    "IReferenceInfo",
    # Base classes
    "BaseNode",
    "BaseAnnotation",
    "BaseModule",
    "BaseVariableDeclaration",
    "BaseParameter",
    "BaseProcedureDeclaration",
    "BaseFunctionDeclaration",
    "BaseStatement",
    "BaseExpression",
    "BaseAssignment",
    "BaseIfStatement",
    "BaseForStatement",
    "BaseForEachStatement",
    "BaseWhileStatement",
    "BaseTryStatement",
    "BaseReturnStatement",
    "BaseRaiseStatement",
    "BaseExecuteStatement",
    "BaseBinaryExpression",
    "BaseUnaryExpression",
    "BaseCallExpression",
    "BasePropertyAccessExpression",
    "BaseIndexAccessExpression",
    "BaseNewExpression",
    "BaseLiteral",
    "BaseIdentifier",
    "BasePreprocessorDirective",
    "BasePreprocessorIf",
    "BasePreprocessorRegion",
    "BaseQuery",
    "BaseComment",
    "BaseReferenceInfo",
]
